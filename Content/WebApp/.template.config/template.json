{
  "$schema": "http://json.schemastore.org/template",
  "author": "Joe Audette",
  "classifications": [ "Web" ], 
  "name": "cloudscribe web project template",
  "identity": "cloudscribe.Template.CSharp",         
  "groupIdentity":"cloudscribe",
  "shortName": "cloudscribe",
  "tags": {
    "language": "C#",
    "type":"project"
  },
  "sourceName": "WebApp",
  "preferNameDirectory": true,
  "guids": [
    "4BC5DF1F-B155-4A69-9719-0AB349B1ACB2",
    "0353CAB0-205A-4FCD-9626-1282ECF47059",
    "0328E46C-68FB-435B-9CAF-310DB4AEC0CE"
  ],
  "primaryOutputs": [
    {
      "path": "WebApp.csproj"
    }
  ],
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(SimpleContentConfig == 'a')",
          "exclude": [
            "Controllers/HomeController.cs",
            "Views/Home/**"
          ]
        },
        {
          "condition": "(SimpleContentConfig == 'c')",
          "exclude": [
            "Controllers/HomeController.cs",
            "Views/Home/**"
          ]
        },
        {
          "condition": "(!ContactForm)",
          "exclude": [
            "Views/Contact/**"
          ]
        },
       
        {
          "condition": "(!KvpCustomRegistration)",
          "exclude": [
            "app-userproperties.json",
            "Views/Account/RegisterMiddle.cshtml",
            "Views/Manage/**",
            "Views/UserAdmin/**"
          ]
        },
        
        {
          "condition": "(!IdentityServer)",
          "exclude": [
            "Config/IdentityServerIntegration.cs"
          ]
        },
        
        {
          "condition": "(!Webpack)",
          "exclude": [
            "app-vanilla/**",
            "tsconfig.json",
            "webpack.config.js",
            "webpack.production.config.js"

          ]
        },
        {
          "condition": "(!IncludeReact)",
          "exclude": [
            "app-react/**",
            "Controllers/SampleDataController.cs"
          ]
        },
        {
          "condition": "(!AuthoringMode)",
          "exclude": [
            ".template.config/**"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "MultiTenantMode": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "FolderName",
      "replaces": "MULTITENANT-MODE",
      "description": "Multi-tenancy configuration.",
      "choices": [
        {
          "choice": "FolderName",
          "description": "There is a root tenant, and other tenants can be added starting at a folder segment."
        },
        {
          "choice": "HostName",
          "description": "You will be able to create additional sites by specifying a host name. Additional tenants require DNS and web server settings."
        },
		    {
          "choice": "None",
          "description": "A single tenant installation. This can be changed later by configuration."
        }
      ]
    },
    "SimpleContentConfig": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "a",
      "description": "SimpleContent configuration.",
      "choices": [
        {
          "choice": "a",
          "description": "Pages and Bog with Pages as default route"
        },
        {
          "choice": "b",
          "description": "Pages and Blog with Home Controller as default route"
        },
		    {
          "choice": "c",
          "description": "Blog ONLY with Blog as default route"
        },
		    {
          "choice": "d",
          "description": "Blog ONLY with Home Controller as default route"
        },
        {
          "choice": "z",
          "description": "Not installed, SimpleContent will not be included"
        }
      ]
      
    },
    "NonRootPagesSegment": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "p",
      "replaces": "NONROOTPAGESEGMENT",
      "description": "If you are using SimpleContent pages with SimpleContentConfig option b, this will be used as the url segment for the pages to start at."
    },
    "NonRootPagesTitle": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Articles",
      "replaces": "NONROOTPAGETITLE",
      "description": "If you are using SimpleContent pages with SimpleContentConfig option b, this will be used as the title for the pages top level menu item."
    },
    "ContactForm": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Include cloudscribe SimpleContactForm."
    },
    "KvpCustomRegistration": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Include cloudscribe key/value pair custom registration."
    },
    "IdentityServer": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Include IdentityServer4 integration."
    },
	  "Logging": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Include cloudscribe logging and log viewer UI."
    },

    

    "DynamicPolicy": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Include cloudscribe Dynamic Authorization Policies."
    },

    "DataStorage": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "NoDb",
      "description": "The data storage platform you wish to use.",
      "choices": [
        {
          "choice": "NoDb",
          "description": "A no-database file system storage"
        },
        {
          "choice": "SQLite",
          "description": "SQLite storage using Entity Framework Core"
        },
        {
          "choice": "MSSQL",
          "description": "Microsoft SqlServer storage using Entity Framework Core"
        },
		    {
          "choice": "pgsql",
          "description": "PostgreSql storage using Entity Framework Core"
        },
		    {
          "choice": "MySql",
          "description": "MySql storage using Entity Framework Core"
        }
      ]
      
    },
    "Webpack": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "false",
      "description": "Include client side development setup with webpack and typescript. This is an advanced option and requires that you have node and npm installed."
    },
    "ReactSample": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Include a react sample client app, requires Webpack to be true"
    },
    "IncludeReact": {
      "type": "computed",
      "value": "(Webpack && ReactSample)"
    },
   
    
    "SQLite": {
      "type": "computed",
      "value": "(DataStorage == \"SQLite\")"
    },
    "MSSQL": {
      "type": "computed",
      "value": "(DataStorage == \"MSSQL\")"
    },
    "MySql": {
      "type": "computed",
      "value": "(DataStorage == \"MySql\")"
    },
    "pgsql": {
      "type": "computed",
      "value": "(DataStorage == \"pgsql\")"
    },
    "NoDb": {
      "type": "computed",
      "value": "(DataStorage == \"NoDb\")"
    },
    "UtmCampaign": {
      "type": "generated",
      "generator": "casing",
      "parameters": {
        "source":"DataStorage",
        "toLower": true
      },
      "replaces": "UTM-CAMPAIGN"
    },
    "AuthoringMode": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": false
      }
    },
    "HttpsPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use to configure SSL in launchSettings.json."
    },
    "HttpsPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 44300,
        "high": 44399
      }
    },
    "HttpsPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "HttpsPort",
        "fallbackVariableName": "HttpsPortGenerated"
      },
      "replaces": "44360"
    },
    "KestrelPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use to configure Kestrel in launchSettings.json."
    },
    "KestrelPortGenerated": {
      "type": "generated",
      "generator": "port"
    },
    "KestrelPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "KestrelPort",
        "fallbackVariableName": "KestrelPortGenerated"
      },
      "replaces": "55348"
    },
    "IISExpressPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use to configure IIS Express in launchSettings.json."
    },
    "IISExpressPortGenerated": {
      "type": "generated",
      "generator": "port"
    },
    "IISExpressPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "IISExpressPort",
        "fallbackVariableName": "IISExpressPortGenerated"
      },
      "replaces": "55347"
    }

  }
  
}
